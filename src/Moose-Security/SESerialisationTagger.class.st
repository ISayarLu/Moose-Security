Class {
	#name : #SESerialisationTagger,
	#superclass : #SEVulnerabilityTagger,
	#category : #'Moose-Security'
}

{ #category : #'default taggers' }
SESerialisationTagger class >> execTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger methodsNamed: #exec in: model ]
]

{ #category : #'default taggers' }
SESerialisationTagger class >> getOutputPropertiesTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger methodsNamed: #getOutputProperties in: model ]
]

{ #category : #'default taggers' }
SESerialisationTagger class >> getTransletInstanceTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger methodsNamed: #getTransletInstance in: model ]
]

{ #category : #'default taggers' }
SESerialisationTagger class >> mapClassTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger classesImplementing: #Map in: model ]
]

{ #category : #'default taggers' }
SESerialisationTagger class >> newOutputStreamTagger [
	"This method is located in the Files class."

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger methodsNamed: #newOutputStream in: model ]
]

{ #category : #'default taggers' }
SESerialisationTagger class >> newTransformerTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger methodsNamed: #newTransformer in: model ]
]

{ #category : #'default taggers' }
SESerialisationTagger class >> readAllBytesTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger methodsNamed: #readAllBytes in: model ]
]

{ #category : #'default taggers' }
SESerialisationTagger class >> readExternalTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger methodsNamed: #readExternal in: model ]
]

{ #category : #'default taggers' }
SESerialisationTagger class >> readLineTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger methodsNamed: #readLine in: model ]
]

{ #category : #'default taggers' }
SESerialisationTagger class >> readObjectTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger methodsNamed: #readObject in: model ]
]

{ #category : #'default taggers' }
SESerialisationTagger class >> serializableClassTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger classesImplementing: #Serializable in: model ]
]

{ #category : #accessing }
SESerialisationTagger class >> tagColor [
	"Method generated by SEVulnerabilityTagger class>>#generateColorMethods"

	^ (Color r: 0.07038123167155426 g: 0.6999022482893451 b: 0.6999022482893451 alpha: 1.0)
]

{ #category : #accessing }
SESerialisationTagger class >> tagName [

	^ #Serialisation
]

{ #category : #'default taggers' }
SESerialisationTagger class >> transformTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger methodsNamed: #transform in: model ]
]

{ #category : #'default taggers' }
SESerialisationTagger class >> transformerClassTagger [

	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger classesImplementing: #Transformer in: model ]
]
