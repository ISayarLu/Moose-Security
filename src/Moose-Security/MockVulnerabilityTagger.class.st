Class {
	#name : #MockVulnerabilityTagger,
	#superclass : #SEVulnerabilityTagger,
	#category : #'Moose-Security'
}

{ #category : #'as yet unclassified' }
MockVulnerabilityTagger class >> classImplentinginterfaceDTagger [

	<cautionTagger>
	| aBlock|
		
	aBlock := SEVulnerabilityTagger assocChanges select: [ :change | change entity allTargets anySatisfy: [ :target | target name = 'InterfaceD' ]].
	
	^ self tagResultOf: [ aBlock  collect: [ :e | e entity ]] .
 
]

{ #category : #'as yet unclassified' }
MockVulnerabilityTagger class >> interfaceDTagger [
"
	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger classesImplementing: #interfaceD in: model]"
]

{ #category : #'as yet unclassified' }
MockVulnerabilityTagger class >> methodCTagger [
	
	<cautionTagger>
	^ self tagResultOf: [ :model :tagger | tagger methodsNamed: #methodC in: model ]
]

{ #category : #'as yet unclassified' }
MockVulnerabilityTagger class >> tagColor [
	
	^ (Color r: 0.70 g: 0.69 b: 0.5 alpha: 1.0)
]

{ #category : #'as yet unclassified' }
MockVulnerabilityTagger class >> tagName [ 
	
	^ #MockVulnerability
]
